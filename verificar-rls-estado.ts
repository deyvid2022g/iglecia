import { config } from 'dotenv';
import { createClient } from '@supabase/supabase-js';

// Cargar variables de entorno
config();

const supabaseUrl = process.env.VITE_SUPABASE_URL!;
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY!;

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Variables de entorno faltantes');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function verificarEstadoRLS() {
  console.log('üîç VERIFICANDO ESTADO DE POL√çTICAS RLS');
  console.log('=====================================\n');

  try {
    // Verificar pol√≠ticas existentes
    console.log('üìã Verificando pol√≠ticas existentes en tabla profiles...');
    const { data: policies, error: policiesError } = await supabase
      .from('pg_policies')
      .select('*')
      .eq('tablename', 'profiles');

    if (policiesError) {
      console.log('‚ö†Ô∏è  No se pudieron obtener las pol√≠ticas (esto es normal si no tienes permisos de admin)');
      console.log('Error:', policiesError.message);
    } else {
      console.log('‚úÖ Pol√≠ticas encontradas:', policies?.length || 0);
      if (policies && policies.length > 0) {
        policies.forEach(policy => {
          console.log(`   - ${policy.policyname} (${policy.cmd})`);
        });
      }
    }

    console.log('\nüß™ Probando operaciones b√°sicas...');
    
    // Probar login
    console.log('\nüîê Probando login con lugarderefugio005@gmail.com...');
    const { data: loginData, error: loginError } = await supabase.auth.signInWithPassword({
      email: 'lugarderefugio005@gmail.com',
      password: 'L3123406452r'
    });

    if (loginError) {
      console.log('‚ùå Error de login:', loginError.message);
      console.log('   C√≥digo:', loginError.status);
    } else {
      console.log('‚úÖ Login exitoso!');
      console.log('   Usuario ID:', loginData.user?.id);
      
      // Probar acceso a profiles
      console.log('\nüìä Probando acceso a tabla profiles...');
      const { data: profileData, error: profileError } = await supabase
        .from('profiles')
        .select('*')
        .eq('id', loginData.user?.id)
        .single();

      if (profileError) {
        console.log('‚ùå Error accediendo a profiles:', profileError.message);
        console.log('   C√≥digo:', profileError.code);
      } else {
        console.log('‚úÖ Acceso a profiles exitoso!');
        console.log('   Perfil:', profileData);
      }

      // Cerrar sesi√≥n
      await supabase.auth.signOut();
    }

  } catch (error) {
    console.error('üí• Error general:', error);
  }

  console.log('\nüìã INSTRUCCIONES:');
  console.log('==================');
  console.log('1. Si ves "Error de login: Database error granting user":');
  console.log('   ‚Üí Las pol√≠ticas RLS NO est√°n aplicadas correctamente');
  console.log('   ‚Üí Ejecuta el SQL en INSTRUCCIONES-CORRECCION-LOGIN.md');
  console.log('\n2. Si ves "Login exitoso" pero "Error accediendo a profiles":');
  console.log('   ‚Üí El login funciona pero las pol√≠ticas RLS son muy restrictivas');
  console.log('   ‚Üí Ejecuta el SQL en INSTRUCCIONES-CORRECCION-LOGIN.md');
  console.log('\n3. Si todo funciona:');
  console.log('   ‚Üí ¬°Perfecto! El problema est√° resuelto');
  console.log('\nüîó Supabase Dashboard: https://supabase.com/dashboard');
  console.log('üìÅ Archivo SQL: INSTRUCCIONES-CORRECCION-LOGIN.md (l√≠neas 14-46)');
}

verificarEstadoRLS();